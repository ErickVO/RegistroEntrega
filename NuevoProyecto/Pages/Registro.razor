@page "/Registro"
@page "/Registro/{Id:int}"

@using Models
@using BLL

@inject IToastService toast

<h3>Registro</h3>

<EditForm Model="Dato" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

    <div class-group>
        <label>Id:</label>
        <InputNumber @bind-Value="Dato.Id" />
        <button type="button" @onclick="Buscar">Buscar</button>
    </div>

    <p />

    <div class-group>
        <label>Nombre:</label>
        <InputText @bind-Value="Dato.Nombre" />
    </div>

    <p />

    <div class-group>
        <label>Telefono:</label>
        <InputText @bind-Value="Dato.Telefono" />
    </div>

    <p />

    <div class-group>
        <label>Cedula:</label>
        <InputText @bind-Value="Dato.Cedula" />
    </div>

    <p />

    <div class-group>
        <label>Direccion:</label>
        <InputText @bind-Value="Dato.Direccion" />
    </div>

    <p />

    <div class-group>
        <label>Fecha de Nacimiento:</label>
        <InputDate @bind-Value="Dato.FechaNacimiento" />
    </div>

    <p />

    <div class-group>
        <button type="button" @onclick="Nuevo">Nuevo</button>
        <button type="submit" @onclick="Guardar">Guardar</button>
        <button type="button" @onclick="Eliminar">Elimina</button>
    </div>

</EditForm>

@code {
    Datos Dato = new Datos();

    [Parameter]
    public int EstudianteId { get; set; }

    protected override void OnInitialized()
    {
        Nuevo(); //siempre se hace nuevo

        Buscar(); //solo hace efecto si se paso un id por parametro
    }

    private void Nuevo()
    {
        Dato = new Datos();
    }

    private void Guardar()
    {

    }

    private void Eliminar()
    {

    }

    private void Buscar()
    {
        if (Dato.Id > 0)
        {
            var encontrado = DatosBLL.Buscar(Dato.Id);

            if (encontrado != null)
                this.Dato = encontrado;
            else
                toast.ShowWarning("No encontrado");
        }
    }

}
